#include<iostream>
#include<string>
using namespace std;

//类对象作为类成员

//手机类
class Phone
{
public:

	//Phone 的有参构造
	Phone(string pName)
	{
		cout << "phone 的构造调用" << endl;
		m_PName = pName;
	}
	~Phone()
	{
		cout << "Phone 的析构调用" << endl;
	}
	//手机名
	string m_PName;
};

//人类
class Person
{
public :
	//等价于： Phone P_phone = pName;（隐式转化法）
	Person(string name, string pName):P_Name(name),P_Phone(pName)
	{
		cout << "Pesrson 的构造调用" << endl;
	}

	~Person()
	{
		cout << "Person 的析构调用" << endl;
	}
	string P_Name;
	//姓名

	//手机
	Phone P_Phone;
};


//当其他类对象作为本类成员的时候，先构造其他类的对象，再构造自身
//但析构调用是相反的：先析构自身，再析构其他的类
void test01()
{
	Person p("张三", "苹果");
	cout << p.P_Name << "拿着：" << p.P_Phone.m_PName << endl;
}
int main()
{
	test01();
	system("pause");
	return 0;

} 