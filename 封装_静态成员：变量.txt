#include<iostream>
using namespace std;

//4.2.8 静态成员
/*静态成员就是成员变量和函数前加关键字 static ，称为静态成员

	静态成员分为：
		* 静态成员变量
				*所有对象共同享用同一份数据
				*在编译阶段分配内存（生成exe文件之前就已经被分配了内存）
				*类内声明，类外初始化（必须要有初始值）
		* 静态成员函数
				*所有对象共同享用同一个函数
				*静态成员函数只能访问静态成员变量
*/



class Person
{
public:
	//int m_A;//非静态成员变量

	//所有对象都共同享有同一份数据
	//在编译阶段分配内存
	//类内声明，类外初始化
	static int m_A;//类内声明

	//静态成员变量也是有访问权限的，如：
//private://私有权限类外访问不到
//	static int m_B;

};
//int Person::m_B = 300;
int Person::m_A = 100;//类外初始化，
//**注意上面的代码只能写在类的下边，不能写在类的上面（还没声明类）

void test01()
{
	Person p;
	cout << p.m_A << endl;
	Person p2;
	p2.m_A = 200;
	cout << p.m_A << endl;//因此，所有对象都公用同一份数据
}

void test02()
{
	//静态成员变量 不属于某一个对象上，所有对象都共享同一份数据
	//因此静态成员变量有两种访问方式

	//1.通过对象进行访问
	Person p;
	p.m_A;
	cout << p.m_A << endl;
	//2.通过类名访问(不需要创建一个类再访问)
	//因为静态成员变量不属于某一个对象，因此可以用 "类名:: 其作用域下的成员"
	cout << Person::m_A << endl;
	//cout << Person::m_B << endl;//私有权限类外访问不到
}
	int main()
{
	test02();
	system("pause");
	return 0;

} 