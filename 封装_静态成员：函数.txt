#include<iostream>
using namespace std;

//4.2.8 静态成员
/*静态成员就是成员变量和函数前加关键字 static ，称为静态成员

	静态成员分为：
		* 静态成员变量
				*所有对象共同享用同一份数据
				*在编译阶段分配内存（生成exe文件之前就已经被分配了内存）
				*类内声明，类外初始化（必须要有初始值）
		* 静态成员函数
				*所有对象共同享用同一个函数
				*静态成员函数只能访问静态成员变量
*/

//静态成员函数
//所有的对象共享同一个函数
//静态成员函数只能访问静态成员变量
class Person
{
public:
	//静态成员函数
	static 	void func()
	{
		m_A = 100;//静态的成员函数 是可以访问 静态的成员变量 的 
		//m_B = 200;//静态的成员函数 是不可以访问 非静态的成员变量的
			//因为非静态成员变量是属于特定类的成员，但静态成员函数是不能区分是哪一个对象(p1，P2...)的m_B
		cout << "static void func 调用" << endl;
	}
	static int m_A;//静态成员变量，类内声明，类外初始化！！！
	int m_B;//非静态的成员变量

	//静态成员函数也是有访问权限的
private:
	static void func2()
	{
		cout << "static void func2()" << endl;
	}
};

int Person::m_A = 300;

void test01()
{
	//有两种访问方式;
	//1.通过对象访问
	Person p;
	p.func();
	//2.通过类名访问
	Person::func();
	//Person::func2();//private 私有修饰的，因此类外不能调用
}
	int main()
{
	test01();
	system("pause");
	return 0;

} 