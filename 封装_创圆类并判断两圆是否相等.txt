#include<iostream>
using namespace std;
/*练习案例1：
	设计立方体类
	求出立方体的面积和体积
	分别用全局函数和成员函数判断两个立方体是否相等
	长：m_L 宽：m_W 高：m_H
*/
class Cube
{
public:
	//设置长宽高
	void Set_L(int L)
	{
		m_L = L;
	}
	void Set_W(int W)
	{
		m_W = W;
	}
	void Set_H(int H)
	{
		m_H = H;
	}
	//获取长宽高
	int get_L()
	{
		return m_L;
	}
	int get_W()
	{
		return m_W;
	}
	int get_H()
	{
		return m_H;
	}
	//获取立方体面积和体积
	int calculateS()
	{
		return 2 * (m_L * m_W + m_L * m_H + m_W * m_H);
	}
	int calculateV()
	{
		return m_L * m_W * m_H;
	}
	//利用成员函数判断两个立方体是否相等
	bool isSameClass(Cube &c)//由于是在类里面，因此可以直接引用一个立方体，所以只需要一个参数，用来传另一个立方体就行
	{
		if (get_L() == c.get_L() && get_W() == c.get_W() && get_H() == c.get_H())
		{
			return true;
		}
		else
			return false;
	}
private:
	int m_L;
	int m_W;
	int m_H;
};


//利用全局函数判断俩立方体是否相等
bool isSame(Cube &c1, Cube &c2)//引用作参
{
	if (c1.get_L() == c2.get_L() && c1.get_W() == c2.get_W() && c1.get_H() == c2.get_H())
		return true;
	else
		return false;
}
int main() {
	//创建立方体对象1
	Cube c1;
	c1.Set_L(10);
	c1.Set_W(10);
	c1.Set_H(10);
	cout << "c1的面积为：" << c1.calculateS() << endl;
	cout << "c1的体积为：" << c1.calculateV() << endl;

	//创建立方体对象2
	Cube c2;
	c2.Set_L(10);
	c2.Set_W(15);
	c2.Set_H(10);
	cout << "c2的面积为：" << c2.calculateS() << endl;
	cout << "c2的体积为：" << c2.calculateV() << endl;
	//利用全局函数判断
	bool ret = isSame(c1, c2);
	if (ret == 1)
	{
		cout << "c1和c2相等" << endl;
	}
	else
	{
		cout << "c1和c2不相等" << endl;
	}
	//利用成员函数判断
	ret = c1.isSameClass(c2);
	if (ret == 1)
	{
		cout << "c1和c2相等" << endl;
	}
	else
	{
		cout << "c1和c2不相等" << endl;
	}
	system("pause");
	return 0;
}