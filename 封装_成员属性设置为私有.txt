#include<iostream>
#include<string>
using namespace std;

//成员属性设置为私有
//1.可自己控制读写权限
//2.对于写可以检测数据的有效性
//
////1.可自己控制读写权限：设计人类
//class Person 
//{
//public://通过一个公共的成员函数，给私密的成员进行操作
//	/*可读可写*/
//	//写姓名
//	void SetName(string name) 
//	{
//		m_Name = name;
//	}
//	//读姓名
//	string GetName()
//	{
//		return m_Name;
//	}
//
//	/*返回年龄：只读*/
//	int Getage()
//	{
//		int m_Age = 10;
//		return m_Age;
//	}
//	/*设置情人：只写*/
//	void Setlover(string Lover) 
//	{
//		m_Lover = Lover;
//	}
//
//private:
//	//姓名  可读可写的权限
//	string m_Name;
//	
//	//年龄	只读
//	int m_Age;
//	//情人	只写
//	string m_Lover;
//
//};
//int main() {
//	Person p;
//	p.SetName("张三");
//
//	cout << p.GetName() << endl;
//	cout << p.Getage() << endl;
//	p.SetName("苍井");
//	system("pause");
//	return 0;
//}

//成员属性设置为私有
//1.可自己控制读写权限
//2.对于写可以检测数据的有效性

//1.可自己控制读写权限：设计人类
class Person 
{
public://通过一个公共的成员函数，给私密的成员进行操作
	/*可读可写*/
	//写姓名
	void SetName(string name) 
	{
		m_Name = name;
	}
	//读姓名
	string GetName()
	{
		return m_Name;
	}

	/*返回年龄：可读可写，但年龄要写的话只能是 0~ 150 */
	int Getage()
	{
		int m_Age = 10;
		return m_Age;
	}
	void Setage(int age) 
	{
		if(age>=0&&age<=150)
		{
			m_Age = age;
		}
		else 
		{
			cout << "年龄有误" << endl;
			return;
		}
	}
	/*设置情人：只写*/
	void Setlover(string Lover) 
	{
		m_Lover = Lover;
	}

private:
	//姓名  可读可写的权限
	string m_Name;
	
	//年龄	只读
	int m_Age;
	//情人	只写
	string m_Lover;

};
int main() {
	Person p;
	p.SetName("张三");

	cout << p.GetName() << endl;
	cout << p.Getage() << endl;
	p.SetName("苍井");
	system("pause");
	return 0;
}